{
  "version": 3,
  "sources": ["../../node_modules/@joinbox/slide/slide.js", "../../src/js/readAttribute.js", "../../src/js/CollapsibleItem.js"],
  "sourcesContent": ["var slide=function(){let{element,targetSize,dimension=\"y\"}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};if(!(element instanceof HTMLElement)){throw new Error(`slide: expected parameter element to be a HTMLElement, got ${element} instead.`)}if(![\"x\",\"y\"].includes(dimension)){throw new Error(`slide: expected parameter dimension to be either 'x' or 'y', got ${dimension} instead.`)}const dimensionName=dimension===\"x\"?\"Width\":\"Height\";const initialSize=element[`offset${dimensionName}`];targetSize=targetSize??element[`scroll${dimensionName}`];requestAnimationFrame(()=>{element.style[dimensionName.toLowerCase()]=`${initialSize}px`;requestAnimationFrame(()=>{element.style[dimensionName.toLowerCase()]=`${targetSize}px`})});const handleTransitionEnd=param=>{let{target,propertyName}=param;if(target!==element)return;if(propertyName!==dimensionName.toLowerCase())return;element.removeEventListener(\"transitionend\",handleTransitionEnd);if(element[`offset${dimensionName}`]===element[`scroll${dimensionName}`]){requestAnimationFrame(()=>element.style[dimensionName.toLowerCase()]=\"auto\")}};element.addEventListener(\"transitionend\",handleTransitionEnd)};export{slide as default};", "export default function(element,attributeName){let{transform=value=>value,validate=()=>true,expectation}=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};const value=element.getAttribute(attributeName);const transformedValue=transform(value);if(!validate(transformedValue)){throw new Error(`Expected attribute ${attributeName} of element ${element} to be ${expectation}; got ${transformedValue} instead (${value} before the transform function was applied).`)}return transformedValue};", "import slide from\"@joinbox/slide\";import readAttribute from\"./readAttribute.js\";class CollapsibleItem extends HTMLElement{#trigger;#detail;#isOpen;#collapsibleGroupId;static #collapsibleToggleEventName=\"collapsibleToggle\";static #collapsibleOpenAttributeName=\"data-collapsible-is-open\";connectedCallback(){this.#trigger=this.querySelector(\"[data-collapsible-trigger]\");this.#detail=this.querySelector(\"[data-collapsible-detail]\");this.#isOpen=false;this.#collapsibleGroupId=readAttribute(this,\"data-collapsible-group-id\",{validate:value=>!!value,expectation:\"a non-empty string\"});if(!(this.#trigger instanceof HTMLElement)){throw new Error(`CollapsibleItem: this.#trigger is expected to be an instance of HTMLElement. Got ${this.#trigger} instead`)}if(!(this.#detail instanceof HTMLElement)){throw new Error(`CollapsibleItem: this.#detail is expected to be an instance of HTMLElement. Got ${this.#detail} instead`)}this.#registerTriggerClickListener();this.#registerCollapsibleToggleListener()}#registerTriggerClickListener(){this.#trigger.addEventListener(\"click\",this.#dispatchCollapsibleToggleEvent.bind(this))}#registerCollapsibleToggleListener(){window.addEventListener(CollapsibleItem.#collapsibleToggleEventName,this.#handleCollapsibleToggleEvent.bind(this))}#handleCollapsibleToggleEvent(event){if(this.#isItself(event.target)){this.#toggleDetail()}else if(this.#isInSameGroupAs(event.detail.collapsibleGroupId)&&this.#isOpen){this.#closeDetail()}}#toggleDetail(){if(this.#isOpen){this.#closeDetail()}else{this.#openDetail()}}#openDetail(){this.#isOpen=true;requestAnimationFrame(()=>{this.toggleAttribute(CollapsibleItem.#collapsibleOpenAttributeName,true)});slide({element:this.#detail});this.#scrollIntoView()}#closeDetail(){this.#isOpen=false;requestAnimationFrame(()=>{this.toggleAttribute(CollapsibleItem.#collapsibleOpenAttributeName,false)});slide({element:this.#detail,targetSize:0})}#scrollIntoView(){this.scrollIntoView({behavior:\"smooth\",block:\"center\"})}#dispatchCollapsibleToggleEvent(){const payload={bubbles:true,detail:{collapsibleGroupId:this.#collapsibleGroupId}};this.dispatchEvent(new CustomEvent(CollapsibleItem.#collapsibleToggleEventName,payload))}#isInSameGroupAs(collapsibleGroupId){return collapsibleGroupId===this.#collapsibleGroupId}#isItself(item){return item===this}}if(!window.customElements.get(\"collapsible-item\")){window.customElements.define(\"collapsible-item\",CollapsibleItem)}"],
  "mappings": "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",
  "names": ["slide", "element", "targetSize", "dimension", "dimensionName", "initialSize", "handleTransitionEnd", "param", "target", "propertyName", "readAttribute_default", "element", "attributeName", "transform", "value", "validate", "expectation", "transformedValue", "_trigger", "_detail", "_isOpen", "_collapsibleGroupId", "_collapsibleToggleEventName", "_collapsibleOpenAttributeName", "_registerTriggerClickListener", "registerTriggerClickListener_fn", "_registerCollapsibleToggleListener", "registerCollapsibleToggleListener_fn", "_handleCollapsibleToggleEvent", "handleCollapsibleToggleEvent_fn", "_toggleDetail", "toggleDetail_fn", "_openDetail", "openDetail_fn", "_closeDetail", "closeDetail_fn", "_scrollIntoView", "scrollIntoView_fn", "_dispatchCollapsibleToggleEvent", "dispatchCollapsibleToggleEvent_fn", "_isInSameGroupAs", "isInSameGroupAs_fn", "_isItself", "isItself_fn", "_CollapsibleItem", "__privateAdd", "__privateSet", "readAttribute_default", "value", "__privateGet", "__privateMethod", "CollapsibleItem", "event", "slide", "payload", "collapsibleGroupId", "item"]
}
